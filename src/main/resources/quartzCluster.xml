<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		"
	default-lazy-init="true">
<!-- 配置 quartz需要做的job -->
	<!-- 之前的规则：任务+规则(ref任务)+Scheduler(ref规则) -->
	<!-- 5.1.配置 job类和job类属性 -->
    <bean id="springQuertzClusterTaskSchedulerTesterJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.mavendemo.springtx.QuartzJobExtendsQuartzJobBean" />
        <!-- fail-over 重写执行失败的任务,默认false；true 启动任务时会尝试恢复执行之前未完成的所有任务 -->
        <property name="requestsRecovery" value="true"/>
        <!-- 标识job是持久的,删除所有触发器的时候不被删除 -->
        <property name="durability" value="true"/>
        <property name="volatility" value="false"></property>
        <property name="jobDataAsMap">
			<map>
				<entry key="timeout" value="11" />
			</map>
		</property>
    </bean>
	<!-- 5.2.配置 job类执行机制 -->
		<!-- 自定义Trigger
	    <bean id="springQuertzClusterTaskSchedulerTesterTigger" class="com.mavendemo.springtx.PersistableCronTriggerFactoryBean">
	                    组和名字可以省略
	        <property name="group" value="springQuertzClusterTaskSchedulerTesterTigger"></property>
	     	<property name="name" value="springQuertzClusterTaskSchedulerTesterTigger"></property>
	        <property name="jobDetail" ref="springQuertzClusterTaskSchedulerTesterJobDetail"/>
	        <property name="cronExpression" value="* * * * * ?" />
	    </bean>
	    -->
	    <!-- SimpleTriggerBean频度执行，每隔段时间执行
		<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
			<property name="jobDetail" ref="springQuertzClusterTaskSchedulerTesterJobDetail" />
			<property name="startDelay" value="0" /> 调度工厂实例化后，经过0秒开始执行调度
			<property name="repeatInterval" value="10000" /> 每10秒调度一次
		</bean>
		-->
		<!-- CronTriggerBean规则Cron执行 -->
		<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
			<property name="jobDetail" ref="springQuertzClusterTaskSchedulerTesterJobDetail" />
			<property name="cronExpression" value="* * * * * ?" />
		</bean>

	<!-- 线程执行器配置，用于任务注册 -->
    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
         <property name="corePoolSize" value="10" />
         <property name="maxPoolSize" value="100" />
         <property name="queueCapacity" value="500" />
    </bean>
    <!-- 设置调度 -->
    <bean id="webScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<!-- 加载配置文件 -->
        <property name="configLocation" value="classpath:quartz.properties" />
        <!-- 设置调度器的名字，尽量唯一避免本地和开发环境冲突 -->
        <property name="schedulerName" value="webScheduler" />
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置事务 -->
        <property name="transactionManager" ref="txManager" />
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true" />
        <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动-->
        <property name="startupDelay" value="5"/>
        <!-- 设置自动启动 -->
    	<property name="autoStartup" value="true" />
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <!-- Job可以省略
        <property name="jobFactory">
            <bean class="com.mavendemo.springtx.AutowiringSpringBeanJobFactory" />
        </property>
        -->
        <!-- 触发器 -->
        <property name="triggers">
			<list>
				<!-- <ref bean="springQuertzClusterTaskSchedulerTesterTigger" /> -->
				<ref bean="cronTrigger" />
			</list>
         </property>
        <!-- 作业任务可以省略 -->
        <property name="jobDetails">
            <list>
                <ref bean="springQuertzClusterTaskSchedulerTesterJobDetail" />
            </list>
        </property>
        <!-- 线程 -->
        <property name="taskExecutor" ref="executor" />
	</bean>
</beans>
